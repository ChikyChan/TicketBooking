{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Ticket Booking API",
        "description": "View and book ticket for event"
    },
    "paths": {
        "/authentication/token": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticationRequest"
                            },
                            "example": {
                                "userName": "ChikyChan",
                                "password": "b94bf37da59d2fcf595c4179a37e82b5a7b4dbb5a58624f5d4fdb502f6dc890b6d42086f2173f717d51c4af796d76113440147116eb7319bc8fd30460ce26bf0"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Autnentication succeed and respond the authenticated tokens and expiration information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticatedToken"
                                },
                                "example": {
                                    "AccessToken": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkNoaWt5Q2hhbiIsImlhdCI6MTcxNTM1NTg5Nywicm9sZXMiOlsiQ3VzdG9tZXIiXX0.v1IzSjAMKI3kMklbLqvcT-6HSheg_59DlV0AzltPxSbn1WQEOPPl3_9K7peqSkKuyszvhaYt2yd8eNqZeWp8zg",
                                    "RefreshToken": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJDaGlreUNoYW4iLCJuYW1lIjoiQ2hpa3lDaGFuIiwiaWF0IjoxNzE1MzU1ODk3LCJyb2xlcyI6WyJDdXN0b21lciJdLCJleHAiOjE3MTU0NDU4OTh9.LvArTm0YfLN3yUpm5ox23UXXKuWnq4f08JY4ts8S_Zy7MafE94TXJk71DsSLMswyNN_yrfTAV7yQEY_mBPwC9g",
                                    "ExpiryAt": "2024-05-10T17:55:58Z"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/authentication/refresh": {
            "description": "Use the refresh token of the authenticated user to get a new access token for further operations.",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenRequest"
                            },
                            "example": {
                                "RefreshToken": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJDaGlreUNoYW4iLCJuYW1lIjoiQ2hpa3lDaGFuIiwiaWF0IjoxNzE1MzU1ODk3LCJyb2xlcyI6WyJDdXN0b21lciJdLCJleHAiOjE3MTU0NDU4OTh9.LvArTm0YfLN3yUpm5ox23UXXKuWnq4f08JY4ts8S_Zy7MafE94TXJk71DsSLMswyNN_yrfTAV7yQEY_mBPwC9g"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token refresh succeed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticatedToken"
                                },
                                "example": {
                                    "AccessToken": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkNoaWt5Q2hhbiIsImlhdCI6MTcxNTM1NTg5Nywicm9sZXMiOlsiQ3VzdG9tZXIiXX0.v1IzSjAMKI3kMklbLqvcT-6HSheg_59DlV0AzltPxSbn1WQEOPPl3_9K7peqSkKuyszvhaYt2yd8eNqZeWp8zg",
                                    "RefreshToken": null,
                                    "ExpiryAt": "2024-05-10T17:55:58Z"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "To get a list of events",
                "parameters": [
                    {
                        "name": "isAvailable",
                        "description": "Indicate if to filter the events by isAvailable. Do not pass it if don't want to filter by this flag",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "examples": {
                            "GetAvailableEvents": {
                                "description": "Get available events",
                                "value": "true"
                            },
                            "GetUnAvailableEvents": {
                                "description": "Get unavailable events",
                                "value": "false"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succeed to get the list of events. Empty array if has no events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                },
                                "example": [
                                    {
                                        "EventID": 1,
                                        "EventName": "Artist Sun Yao takes us on a trip across the universe",
                                        "Introduction": "The Aurora Museum recently unveiled solo exhibition \"On the Waves of\" by artist Sun Yao. Showcasing more than 50 pivotal works, the exhibition spans a diverse array of themes from his latest \"Inner Universe\" series to the compelling \"Eternal Flame\" and \"Neverland\" collections, offering a profound insight into Sun’s artistic journey over the past 20 years.",
                                        "Venue": "The Aurora Museum 99 Fucheng Road, Pudong New Area 富城路99号",
                                        "IsAvailable": true
                                    },
                                    {
                                        "EventID": 2,
                                        "EventName": "French artist fuses reality with fantasy at the Lisson Gallery",
                                        "Introduction": "French artist Laure Prouvost is presenting her inaugural exhibition at the Lisson Gallery in Shanghai, titled \"Pulled Towards You.\"",
                                        "Venue": "Lisson Gallery 2/F, 27 Huqiu Road",
                                        "IsAvailable": true
                                    },
                                    {
                                        "EventID": 3,
                                        "EventName": "Crew with Straw Hat Pirates at One Piece pop-up store",
                                        "Introduction": "Ahoy there, mateys! Drop anchor at the One Piece pop-up store in Shanghai through May for a swashbuckling adventure with the Straw Hat Pirates.",
                                        "Venue": "Jing'an Joy City 198 Xizang Rd N.",
                                        "IsAvailable": true
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "To get an event detail of an event specified by an event identity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succeed to get an event by specified event id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                },
                                "example": {
                                    "EventID": 1,
                                    "EventName": "Artist Sun Yao takes us on a trip across the universe",
                                    "Introduction": "The Aurora Museum recently unveiled solo exhibition \"On the Waves of\" by artist Sun Yao. Showcasing more than 50 pivotal works, the exhibition spans a diverse array of themes from his latest \"Inner Universe\" series to the compelling \"Eternal Flame\" and \"Neverland\" collections, offering a profound insight into Sun’s artistic journey over the past 20 years.",
                                    "Venue": "The Aurora Museum 99 Fucheng Road, Pudong New Area 富城路99号",
                                    "IsAvailable": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The format of the id parameter is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "\"a123\" is not a valid number"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The event specified by the event id is not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The event with ID = 1 was not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/timeslots": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succeed to get the time slots of the specified event. Will be an empty array if no timeslots for this event.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventTimeSlot"
                                    }
                                },
                                "example": [
                                    {
                                        "EventTimeSlotId": 1,
                                        "EventId": 1,
                                        "EventDate": "2024-04-27",
                                        "StartAt": "11:00",
                                        "EndOn": "18:00",
                                        "IsAvailable": true
                                    },
                                    {
                                        "EventTimeSlotId": 2,
                                        "EventId": 1,
                                        "EventDate": "2024-04-28",
                                        "StartAt": "11:00",
                                        "EndOn": "18:00",
                                        "IsAvailable": true
                                    },
                                    {
                                        "EventTimeSlotId": 3,
                                        "EventId": 1,
                                        "EventDate": "2024-04-29",
                                        "StartAt": "11:00",
                                        "EndOn": "18:00",
                                        "IsAvailable": true
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "The format of the id parameter is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "\"a123\" is not a valid number"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The event specified by the event id is not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The event with ID = 1 was not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/timeslots/{timeSlotId}": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "timeSlotId",
                        "in": "path",
                        "description": "The id of the event time slot",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succeed to get the time slot specified by the timeSlot Id of the event specified by the id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventTimeSlot"
                                },
                                "example": {
                                    "EventTimeSlotId": 1,
                                    "EventId": 1,
                                    "EventDate": "2024-04-27",
                                    "StartAt": "11:00",
                                    "EndOn": "18:00",
                                    "IsAvailable": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The format of the id parameter or timeSlotId parameter is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "\"a123\" is not a valid number"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The event specified by the event id or the time slot of the specified event specified the time slot id is not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The event with ID = 1 was not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/timeslots/{timeSlotId}/tickets": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "timeSlotId",
                        "in": "path",
                        "description": "The id of the event time slot",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succeed to get the tickets of the event time slot specified by the timeSlot Id of the event specified by the id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                },
                                "example": [
                                    {
                                        "Price": 10.00,
                                        "Type": "Normal",
                                        "AvailableTicketCount": 1000
                                    },
                                    {
                                        "Price": 20.00,
                                        "Type": "VIP1",
                                        "AvailableTicketCount": 200
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "The format of the id parameter or tileSlotId is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "\"a123\" is not a valid number"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The event specified by the event id or the time slot of the specified event specified the time slot id is not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The event with ID = 1 was not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/me/bookings": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Succeed to get the authenticated user's booking list. Empty list may be respond if user has no bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Booking"
                                    }
                                },
                                "example": [
                                    {
                                        "BookingId": 1,
                                        "BookingNo": "B20240411163222399",
                                        "UserName": "ChikyChan",
                                        "EventTimeSlotId": 4,
                                        "EventName": "French artist fuses reality with fantasy at the Lisson Gallery",
                                        "EventDate": "2024-04-27",
                                        "EventStartAt": "11:00",
                                        "EventEndOn": "18:00",
                                        "TicketType": "VIP1",
                                        "Quantity": 2,
                                        "Amount": 1360.00,
                                        "Status": "Pending Payment"
                                    },
                                    {
                                        "BookingId": 2,
                                        "BookingNo": "B20240412124519657",
                                        "UserName": "ChikyChan",
                                        "EventTimeSlotId": 2,
                                        "EventName": "Artist Sun Yao takes us on a trip across the universe",
                                        "EventDate": "2024-04-27",
                                        "EventStartAt": "15:00",
                                        "EventEndOn": "17:00",
                                        "TicketType": "Normal",
                                        "Quantity": 2,
                                        "Amount": 20.00,
                                        "Status": "Confirmed"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The request is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "You are not authenticated or your autnentication is expired."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "TicketBookingAuth": [
                            "Customer"
                        ]
                    }
                ]
            },
            "put": {
                "description": "User buy ticket and create a booking",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Booking"
                            },
                            "example": {
                                "EventTimeSlotId": 1,
                                "TicketType": "Normal",
                                "Quantity": 2
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The booking created succeed",
                        "headers": {
                            "ETag": {
                                "description": "The tag of the booking. This is to indicate the version of a booking",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Some input is in a bad format or not in the expected range.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The value \"a123\" assigned to field Quantity is not a valid number"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "You are not authenticated or your autnentication is expired."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "TicketBookingAuth": [
                            "Customer"
                        ]
                    }
                ]
            }
        },
        "/me/bookings/{id}": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "description": "The identity of the booking"
                        },
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succeed to get the authenticated user's booking specified by the booking identity",
                        "headers": {
                            "ETag": {
                                "description": "The tag of the booking. This is to indicate the version of a booking",
                                "schema": {
                                    "type": "string"
                                },
                                "required": false
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Booking"
                                    }
                                },
                                "example": {
                                    "BookingId": 1,
                                    "BookingNo": "B20240411163222399",
                                    "UserName": "ChikyChan",
                                    "EventTimeSlotId": 4,
                                    "EventName": "French artist fuses reality with fantasy at the Lisson Gallery",
                                    "EventDate": "2024-04-27",
                                    "EventStartAt": "11:00",
                                    "EventEndOn": "18:00",
                                    "TicketType": "VIP1",
                                    "Quantity": 2,
                                    "Amount": 1360.00,
                                    "Status": "Pending Payment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "You are not authenticated or your autnentication is expired."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The booking specified by the id is not found for this user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The booking specified by the id is not found for this user."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "TicketBookingAuth": [
                            "Customer"
                        ]
                    }
                ]
            },
            "patch": {
                "description": "Update a booking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "description": "The identity of the booking"
                        },
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Booking"
                            },
                            "examples": {
                                "CancelBooking": {
                                    "summary": "Cancel a booking",
                                    "description": "Cancel a booking",
                                    "value": {
                                        "Status": "Request Cancel"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succeed to update the specified booking",
                        "headers": {
                            "ETag": {
                                "description": "The tag of the booking. This is to indicate the version of a booking",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                },
                                "example": {
                                    "BookingId": 1,
                                    "BookingNo": "B20240411163222399",
                                    "UserName": "ChikyChan",
                                    "EventTimeSlotId": 4,
                                    "EventName": "French artist fuses reality with fantasy at the Lisson Gallery",
                                    "EventDate": "2024-04-27",
                                    "EventStartAt": "11:00",
                                    "EventEndOn": "18:00",
                                    "TicketType": "VIP1",
                                    "Quantity": 2,
                                    "Amount": 1360.00,
                                    "Status": "Request Cancel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Some input is in a bad format or not in the expected range.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "You are not authenticated or your autnentication is expired."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The booking specified by the id is not found for this user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The booking specified by the id is not found for this user."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The current booking status is not supported to change to the status specified by the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "It is not allowed to request cancel for a completed booking"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "If header 'If-Match' is specified and the value is not match with the ETag value, then will respond `412 Precondition Failed`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "There are some changes of this booking, please refresh the page to get the latest booking information"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "TicketBookingAuth": [
                            "Customer"
                        ]
                    }
                ]
            }
        },
        "/me/bookings/{id}/pay": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "description": "The identity of the booking"
                        },
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "payPlatform",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Alipay",
                                "WeChat",
                                "UnionPay",
                                "PayPal"
                            ]
                        },
                        "example": "Alipay"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to the payment URL of the specified platform",
                        "headers": {
                            "Location": {
                                "description": "The location wiil redirect to",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "You are not authenticated or your autnentication is expired."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The booking specified by the id is not found for this user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "The booking specified by the id is not found for this user."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "Message": "Unexpected error occurred, please contact IT service desk for support."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "TicketBookingAuth": [
                            "Customer"
                        ]
                    }
                ]
            }
        },
        "/payment/notify": {
            "get": {
                "description": "The endpoint for synchorize notify the payment result from external payment platform. The parameters are dynamic according to different payment platform the request come from, and different payment platform payment notify handler should get their parameters from the query string.",
                "responses": {
                    "204": {
                        "description": "Succedd to handle the payment notification"
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthenticationRequest": {
                "type": "object",
                "properties": {
                    "UserName": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string",
                        "description": "The SHA512 hashed password of the authenticating user"
                    }
                }
            },
            "RefreshTokenRequest": {
                "type": "object",
                "properties": {
                    "RefreshToken": {
                        "type": "string"
                    }
                }
            },
            "AuthenticatedToken": {
                "description": "The object to contains access token and refresh token of the authenticated user",
                "type": "object",
                "required": [
                    "AccessToken"
                ],
                "properties": {
                    "AccessToken": {
                        "type": "string"
                    },
                    "RefreshToken": {
                        "type": "string"
                    },
                    "ExpiryAt": {
                        "type": "string",
                        "format": "datetime"
                    }
                }
            },
            "Event": {
                "type": "object",
                "properties": {
                    "EventID": {
                        "type": "integer",
                        "description": "The identity of the event, it should be unique."
                    },
                    "EventName": {
                        "type": "string",
                        "description": "The name of the event"
                    },
                    "Introduction": {
                        "type": "string",
                        "description": ""
                    },
                    "Venue": {
                        "type": "string",
                        "description": "The location of the event"
                    },
                    "IsAvailable": {
                        "type": "boolean",
                        "description": "Indicate if the event time is available for booking. Be true only has at least one event time slot is available"
                    }
                }
            },
            "EventTimeSlot": {
                "type": "object",
                "properties": {
                    "EventTimtSlotId": {
                        "type": "integer",
                        "description": "The time slot identity of the event"
                    },
                    "EventId": {
                        "type": "integer",
                        "description": "The identity of the event of this event time slot, can related to the event"
                    },
                    "EventDate": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the event"
                    },
                    "StartAt": {
                        "type": "string",
                        "format": "time",
                        "description": "The start time of the event on that date"
                    },
                    "EndOn": {
                        "type": "string",
                        "format": "time",
                        "description": "The end time of the event on that date"
                    },
                    "IsAvailable": {
                        "type": "boolean",
                        "description": "Indicate if the event time slot is available for booking. Be true only has at least one ticket has more than 0 available ticket"
                    }
                }
            },
            "Ticket": {
                "type": "object",
                "properties": {
                    "Price": {
                        "type": "number",
                        "description": "The price for book a ticket for this event"
                    },
                    "Type": {
                        "type": "string",
                        "description": "The type of this ticket, can use to describe such as the seat level"
                    },
                    "AvailableTicketCount": {
                        "type": "integer",
                        "description": "The remain ticket stock of this event time slot"
                    }
                }
            },
            "Booking": {
                "type": "object",
                "properties": {
                    "BookingId": {
                        "type": "integer",
                        "description": "The identity of this booking. Auto generated by system.",
                        "readOnly": true
                    },
                    "BookingNo": {
                        "type": "string",
                        "description": "The number of this booking. This should also be unique and auto generated by system.",
                        "readOnly": true
                    },
                    "UserName": {
                        "type": "string",
                        "description": "The name of the user who book the event. Auto determined by system accordint to current login user who book ticket(s).",
                        "readOnly": true
                    },
                    "EventTimeSlotId": {
                        "type": "integer",
                        "description": "The event time slot of this booking, related to a Event Time Slot.",
                        "readOnly": true
                    },
                    "EventName": {
                        "type": "string",
                        "description": "The name of the event. Auto determined by system accordint to Event Time Slot Id",
                        "readOnly": true
                    },
                    "EventDate": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the event. Auto determined by system accordint to Event Time Slot Id",
                        "readOnly": true
                    },
                    "EventStartAt": {
                        "type": "string",
                        "format": "time",
                        "description": "The start time of the event on that date. Auto determined by system accordint to Event Time Slot Id"
                    },
                    "EventEndOn": {
                        "type": "string",
                        "format": "time",
                        "description": "The end time of the event on that date. Auto determined by system accordint to Event Time Slot Id"
                    },
                    "TicketType": {
                        "type": "string",
                        "description": "The type of the booked ticket"
                    },
                    "Quantity": {
                        "type": "integer",
                        "description": "The count of this user booked ticket"
                    },
                    "Amount": {
                        "type": "number",
                        "description": "The total amount of this booking. Auto determined by system",
                        "readOnly": true
                    },
                    "Status": {
                        "type": "string",
                        "description": "The status of this booking. Auto determined by system while booking ticket(s)",
                        "enum": [
                            "New",
                            "Pending Payment",
                            "Pending Confirmation",
                            "Confirmed",
                            "Completed",
                            "Request Cancel",
                            "Pending Cancel Confirmation",
                            "Cancelled"
                        ]
                    }
                }
            },
            "PaymentOrder": {
                "type": "string",
                "properties": {
                    "PaymentOrderId": {
                        "type": "integer",
                        "description": "The payment order of bookings",
                        "readOnly": true
                    },
                    "BookingItems": {
                        "type": "array",
                        "description": "An array to mark which booking included in this payment order. Should be the booking Id for each array items",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "Status": {
                        "type": "string",
                        "description": "The status of this payment order",
                        "enum": [
                            "New",
                            "Pending Payment",
                            "Paid",
                            "Refunded",
                            "Cancelled"
                        ]
                    },
                    "TotalAmount": {
                        "type": "number",
                        "description": "The total amount the user should pay for the bookings",
                        "readOnly": true
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": [
                    "Message"
                ],
                "properties": {
                    "Message": {
                        "description": "A human readable error message",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "TicketBookingAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}